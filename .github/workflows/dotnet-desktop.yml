name: CI - Test Status

# Este flujo de trabajo se ejecutará en cada push a la rama 'main'
on:
  push:
    branches:
      - master  # También puedes cambiarlo a otra rama, como 'develop'
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest  # Elige el sistema operativo, puede ser ubuntu-latest o windows-latest

    steps:
      # Clonar el código del repositorio
      - name: Check out repository code
        uses: actions/checkout@v3

      # Configurar .NET SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x' # O la versión que estés usando (por ejemplo, '6.x')

      # Restaurar dependencias
      - name: Restore dependencies
        run: dotnet restore

      # Compilar el proyecto
      - name: Build the solution
        run: dotnet build --configuration Release --no-restore

      # Ejecutar los tests
      - name: Run tests and generate HTML report
        run: |
          # Ejecutar pruebas y generar el archivo .trx para el reporte
          dotnet test --logger "trx;LogFileName=test-results.trx" --no-restore
          # Instalar ReportGenerator globalmente
          dotnet tool install --global dotnet-reportgenerator-globaltool
          # Generar el reporte HTML a partir del archivo .trx
          reportgenerator -reports:./TestResults/test-results.trx -targetdir:./TestResults/Report -reporttypes:Html

      # Cargar el reporte como artefacto
      - name: Upload Test Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: ./TestResults/Report