name: CI - Test Status

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Clonar el código del repositorio
      - name: Check out repository code
        uses: actions/checkout@v3

      # Configurar .NET SDK
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.x'

      # Restaurar dependencias
      - name: Restore dependencies
        run: dotnet restore

      # Compilar el proyecto
      - name: Build the solution
        run: dotnet build --configuration Release --no-restore

      - name: Create Test Results directory
        run: mkdir -p ${{ github.workspace }}/TestResults

      # Ejecutar los tests y generar el reporte en una carpeta específica
      - name: Run tests
        run: dotnet test --no-restore --verbosity normal --logger "trx;LogFileName=${{ github.workspace }}/TestResults/test-results.trx"

      # Listar archivos en el directorio TestResults
      - name: List TestResults directory
        run: ls -R ${{ github.workspace }}/TestResults

      # Instalar ReportGenerator para convertir el archivo .trx en un reporte HTML
      - name: Install ReportGenerator
        run: dotnet tool install -g dotnet-reportgenerator-globaltool

      # Generar el reporte HTML a partir del archivo .trx
      - name: Generate HTML report
        run: reportgenerator "-reports:${{ github.workspace }}/TestResults/test-results.trx" "-targetdir:${{ github.workspace }}/TestResults/html" "-reporttypes:Html"

      # Subir el artefacto de los resultados del test
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Report
          path: ${{ github.workspace }}/TestResults/html
          retention-days: 2
